from PyQt5 import uic, QtWidgets
from PyQt5.QtGui import QPixmap, QBitmap
from PyQt5.QtWidgets import QApplication, QMainWindow, QFileDialog
import final
import srt
import sys
import diagnos

choise = {'Name': None,
          'Phone_number': None,
          'class_0': None,
          'class_1': None,
          'date': None,
          'Time': None}
days = []
i = 1
while i != 32:
    days.append(i)
    i += 1

marks_list = ['Ford', 'Honda', 'Hyundai', 'Kia', 'Lada (ВАЗ)', 'Mazda', 'Mercedes-Benz', 'Mitsubishi', 'Nissan',
              'Skoda', 'Toyota', 'Volkswagen', 'Acura', 'Daihatsu', 'Datsun', 'Honda', 'Infiniti', 'Isuzu',
              'Lexus', 'Mazda', 'Mitsubishi', 'Scion', 'Subaru', 'Suzuki', 'Toyota', 'Buick', 'Chevrolet', 'Chrysler',
              'Dodge', 'Ford', 'GMC', 'Hummer', 'Jeep', 'Lincoln', 'Mercury', 'Oldsmobile', 'Pontiac', 'Aurus', 'ГАЗ',
              'Москвич', 'ТагАЗ', 'УАЗ', 'Audi', 'BMW', 'Opel', 'Porsche', 'Volkswagen',
              'Daewoo', 'Genesis',
              'Hyundai', 'Kia', 'SsangYong', 'Alfa Romeo', 'Aston Martin', 'Bentley', 'Bugatti', 'Citroen', 'DS',
              'Ferrari',
              'Fiat', 'Jaguar', 'Lamborghini', 'Lancia', 'Land Rover', 'Maserati', 'Maybach', 'Mini', 'Peugeot',
              'Ravon',
              'Renault', 'Rolls-Royce', 'Rover', 'Saab', 'SEAT', 'Skoda', 'Smart', 'Volvo', 'ZAZ', 'Brilliance', 'BYD',
              'Changan', 'Chery', 'DongFeng', 'FAW', 'Foton', 'GAC', 'Geely', 'Great Wall', 'Haima', 'Haval', 'JAC',
              'Lifan', 'Luxgen', 'Zotye']

monthes = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August',
           'September', 'October', 'November', 'December']
           
class Type(QtWidgets.QMainWindow, test.Ui_Form):
    def __init__(self, time):
        self.time = time
        super().__init__()
        self.setupUi(self)
        self.Form = QtWidgets.QWidget()
        self.Form.show()
        self.body_button.clicked.connect(self.handleButton)
        self.engine_button.clicked.connect(self.OnClick)
        self.pushButton_3.clicked.connect(self.OutClick)

    def handleButton(self):
        self.dialog = MyFform(self.time)
        self.dialog.show()
        choise['class_1'] = 'BODY'

    def OutClick(self):
        self.windo = MyFform(self.time)
        self.windo.show()
        choise['class_1'] = 'ELECTRIC'

    def OnClick(self):
        self.w1 = MyFform(self.time)
        self.w1.show()
        choise['class_1'] = 'ENGINE'

class DIAF(QtWidgets.QMainWindow, diagnos.Ui_Form):
    def __init__(self, time):
        self.time = time
        super().__init__()
        self.setupUi(self)
        self.Form = QtWidgets.QWidget()
        self.Form.show()
        self.WH.clicked.connect(self.OnClick)
        self.DTP.clicked.connect(self.handleButton)
        self.pushButton_3.clicked.connect(self.OutClick)

    def handleButton(self):
        self.dialog = MyFform(self.time)
        self.dialog.show()
        choise['class_1'] = 'DTP'


    def OutClick(self):
        self.windo = MyFform(self.time)
        self.windo.show()
        choise['class_1'] = 'suspension'

    def OnClick(self):
        self.w1 = MyFform(self.time)
        self.w1.show()
        choise['class_1'] = 'wheels'

class MyFform(QtWidgets.QMainWindow, final.Ui_Form):
    def __init__(self, time):
        self.time = time
        super().__init__()
        self.setupUi(self)
        self.Form = QtWidgets.QWidget()
        self.Form.show()
        self.comboBox_4.addItem('2021')
        self.comboBox_4.addItem('2022')
        'выбор года'
        for i in marks_list:
            self.comboBox.addItem(i)
        'выбор марки авто'
        for j in self.time:
            self.comboBox_5.addItem(j)


class StartForm(QtWidgets.QMainWindow, srt.Ui_Form):
    def __init__(self):
        self.hours = ['11', '13', '15', '17'] + ['10', '12', '14', '16', '18']
        super().__init__()
        self.setupUi(self)
        self.d_button.clicked.connect(self.OnClick)
        self.fixing_button.clicked.connect(self.SOnclic)

    def handleButton(self):
        self.dialog = DIAF()
        self.dialog.show()

    def OnClick(self):
        time = []
        for i in self.hours:
            if int(i) % 2 == 0:
                time.append(i)
        self.w1 = DIAF(time)
        self.w1.show()
        choise['class_0'] = 'Fixing'

    def SOnclic(self):
        time = []
        for i in self.hours:
            if int(i) % 2 != 0:
                time.append(i)
        self.w1 = Type(time)
        self.w1.show()
        choise['class_0'] = 'Diagnostic'

if __name__ == '__main__':
    app = QtWidgets.QApplication(sys.argv)
    xe = StartForm()
    xe.show()
    sys.exit(app.exec())
